// {type:class}
// {direction:topDown}
[note: You can stick notes on diagrams too!{bg:cornsilk}]
[radio|startReceiver();stopReceiver()]-1>[Encoder|registerLeftEvent();registerRightEvent();registerButtonPressedEvent();registerButtonReleasedEvent()]
[radio]-1>[Display|brightness;NAV;VOR;ILS;MLS;ADF;BFO;VHF1;VHF2;VHF3;HF1;HF2;AM|setActiveFrequency();setStbyFrequency();clearActiveFrequency();clearStbyFrequency();selectStbyNavMode();selectActiveMode();setBrightness();enable()]
[radio]-1>[Keyboard(thread)|registerCallbacks();stop()]
[radio]-1>[OnOffSwitch|pinChanged();getState()]
[Display]-1>[Lcd|spi;max_displays|setDecodeModeForDigits();setMaxDigits();setDigitValue();setDigitValues();setDigitString()|setMode();setModeAll();setIntensity();setIntensityAll();close()]
[radio]-1>[XPlaneReceiver(thread)|setCallback();stop()]
[Encoder]-1>[EventManager|addEvent()]
[Encoder]-[note: This class encapsulates the low level handling of a rotary encoder. It uses two pins (clock, dir) for the rotary part and another port for push button. The class exports callback functions for each direction in which the encoder is being rotated and a button press and button release callback function respectively.{bg:yellow}]
[OnOffSwitch]-[note: Class OnOffSwitch encapsulates the functionality of a simple 2 state button. It reads one pin to determin the state of the switch and exports two functions to determine the state and state changes.{bg: yellow}]
[XPlaneBeaconListener(thread)|state;sock;callback;SEARCHING;LISTENING|registerChangeEvent();stop()]